#!/usr/bin/env node

const chalk = require('chalk')
const program = require('commander')
const download = require('download-git-repo')
const inquirer = require('inquirer')
const ora = require('ora')
const package = require("../package.json")
const childProcess = require('child_process')
/**
* Usage
*/
program
  .usage('<template-name> [project-name]')
  .option('-c, --clone', 'clone the project from github')
  .option('--gitlab', 'clone the project from gitlab')


/**
* Help
*/
program.on('--help', () => {
  console.log('  Usage:')
  console.log()
  console.log(chalk.gray('    # create a new project with an default template'))
  console.log('    $ im init preact my-project')
  console.log()
  console.log(chalk.gray('    # create a new project from a github template'))
  console.log('    $ im init username/repo my-project')
  console.log(chalk.gray('    # create a new project from a gitlab template'))
  console.log('    $ im init groups-name/repo my-project')
  console.log()
})

// 解析命令行输入的参数
program.parse(process.argv)

// 模板名
let tplName = program.args[0]
// 项目名
let projectName = './' + program.args[1]
// 模板链接
let downloadUrl = ''
// 下载源
let downloadSrc = ''

if (program.gitlab) {
  downloadUrl = package.config.gitLabUrl
  downloadSrc = 'gitlab'
} else {
  downloadUrl = package.config.githubUrl
  downloadSrc = 'github'
}

downloadUrl += tplName

downloadRepo()
/**
* 下载
*/
function downloadRepo () {
  const down_spinner = ora(`downloading ${tplName} template from ${downloadSrc}...`)
  const install_spinner = ora('Now install the dependencies...')
  down_spinner.start()
  download(downloadUrl, projectName, { clone: true }, (err) => {
    down_spinner.stop()

    if (err) {
      console.log(chalk.red('Error! Download the template failed, Please try again!'))
    } else {
      console.log(chalk.green('Success! '))
      install_spinner.start()

      childProcess.exec(`cd ${projectName} && cnpm install`, function (err, stdout, stderr) {
        if (!err) {
          install_spinner.stop()
          console.log(chalk.green('All packages have installed!'))
        }
      })
    }
  })
}